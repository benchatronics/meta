# Generated by Django 4.2.23 on 2025-08-27 06:48

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("main", "0005_tasksettngs"),
    ]

    operations = [
        migrations.CreateModel(
            name="UserTaskProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cycles_completed", models.PositiveIntegerField(default=0)),
                ("current_task_index", models.PositiveIntegerField(default=0)),
                ("is_blocked", models.BooleanField(db_index=True, default=False)),
                ("limit_snapshot", models.PositiveIntegerField(default=25)),
                (
                    "price_snapshot",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("12.00"), max_digits=12
                    ),
                ),
                (
                    "commission_snapshot",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("1.45"), max_digits=12
                    ),
                ),
                ("last_reset_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_progress",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["user"], name="main_userta_user_id_67ffa4_idx"
                    ),
                    models.Index(
                        fields=["is_blocked"], name="main_userta_is_bloc_7d88da_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="UserTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cycle_number", models.PositiveIntegerField(default=0)),
                (
                    "order_shown",
                    models.PositiveIntegerField(
                        help_text="1-based order shown to the user within the cycle."
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("IN_PROGRESS", "In progress"),
                            ("SUBMITTED", "Submitted"),
                            ("APPROVED", "Approved"),
                            ("REJECTED", "Rejected"),
                            ("CANCELED", "Canceled"),
                        ],
                        default="IN_PROGRESS",
                        max_length=12,
                    ),
                ),
                (
                    "price_used",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "commission_used",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "task_kind",
                    models.CharField(
                        choices=[
                            ("REGULAR", "Regular"),
                            ("ADMIN", "Admin (requires solvency)"),
                        ],
                        default="REGULAR",
                        max_length=12,
                    ),
                ),
                ("proof_text", models.TextField(blank=True, default="")),
                ("proof_link", models.URLField(blank=True, default="")),
                ("hold_ref", models.CharField(blank=True, default="", max_length=64)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("submitted_at", models.DateTimeField(blank=True, null=True)),
                ("decided_at", models.DateTimeField(blank=True, null=True)),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="instances",
                        to="main.tasktemplate",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "cycle_number"],
                        name="main_userta_user_id_fb72b4_idx",
                    ),
                    models.Index(
                        fields=["status"], name="main_userta_status_702154_idx"
                    ),
                    models.Index(
                        fields=["task_kind"], name="main_userta_task_ki_5562b5_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ForcedTaskDirective",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "applies_on_cycle",
                    models.PositiveIntegerField(
                        db_index=True, help_text="Cycle number this applies to."
                    ),
                ),
                (
                    "target_order",
                    models.PositiveIntegerField(
                        help_text="1-based order to show when eligible."
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("CONSUMED", "Consumed"),
                            ("CANCELED", "Canceled"),
                            ("EXPIRED", "Expired"),
                            ("SKIPPED", "Skipped (behind current order)"),
                        ],
                        db_index=True,
                        default="PENDING",
                        max_length=10,
                    ),
                ),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("batch_id", models.CharField(blank=True, default="", max_length=64)),
                ("reason", models.CharField(blank=True, default="", max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("consumed_at", models.DateTimeField(blank=True, null=True)),
                ("canceled_at", models.DateTimeField(blank=True, null=True)),
                ("expired_at", models.DateTimeField(blank=True, null=True)),
                ("skipped_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_forced_task_directives",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        help_text="Optional fixed template to serve for this order.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.tasktemplate",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="forced_task_directives",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["target_order", "created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "applies_on_cycle", "status"],
                        name="main_forced_user_id_de148e_idx",
                    ),
                    models.Index(
                        fields=["applies_on_cycle", "target_order"],
                        name="main_forced_applies_c2cf15_idx",
                    ),
                    models.Index(
                        fields=["expires_at"], name="main_forced_expires_114c13_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="main_forced_created_37c2be_idx"
                    ),
                ],
            },
        ),
    ]
