export default function SignInRewardMobileExact(){
  const days = [
    { d: 1, a: 10 },
    { d: 2, a: 30 },
    { d: 3, a: 50 },
    { d: 4, a: 100 },
    { d: 5, a: 200 }
  ];

  return (
    <div className='w-full min-h-screen bg-[#f6f7fb] flex justify-center p-4'>
      <div className='w-full max-w-[420px]'>
        {/* ===== Banner (mobile-first, hard-left text) ===== */}
        <section className='relative rounded-[22px] bg-[#FFF3C7] border border-[#FFE89A] shadow-sm overflow-hidden'>
          <div className='relative pl-0 pr-4 pt-4 pb-6'>
            {/* Title row: icon beside title; all text shares same left edge (x=0) */}
            <div className='pl-0 ml-0 max-w-[60%] text-left'>
              <div className='flex items-center gap-2 m-0 p-0'>
                <span className='inline-grid h-8 w-8 place-items-center rounded-full bg-white border border-[#FFE386] shadow'>
                  <GiftMini className='h-4 w-4 text-amber-500' />
                </span>
                <span className='text-[#0F172A] font-semibold text-[16px] leading-none truncate'>Reward Point</span>
              </div>
              <p className='mt-2 text-[#0B3AAE] font-extrabold text-[28px] leading-none m-0'>+€350</p>
              <p className='mt-2 text-[#64748B] text-[10px] leading-tight m-0'>Sign in for 5 consecutive days to receive rewards</p>
            </div>

            {/* Illustration (kept inside card on mobile) */}
            <div className='absolute right-3 top-4'>
              <Illustration className='h-[92px] w-auto' />
            </div>
          </div>
        </section>

        {/* ===== Day chips (card below banner so it doesn't block) ===== */}
        <div className='-mt-6 relative z-20'>
          <div className='rounded-2xl bg-white shadow-xl ring-1 ring-gray-100 px-4 py-3 flex justify-between'>
            {days.map((x) => (
              <div key={x.d} className='flex flex-col items-start w-1/5'>
                <div className='h-10 w-10 rounded-full bg-blue-50 ring-1 ring-blue-200 grid place-items-center'>
                  <GiftOutline className='h-5 w-5 text-blue-600' />
                </div>
                <span className='mt-1 text-[11px] text-gray-500 whitespace-nowrap'>Day {x.d}</span>
                <span className='text-[13px] font-bold text-gray-900 whitespace-nowrap'>€{x.a}</span>
              </div>
            ))}
          </div>
        </div>

        {/* ===== Timeline (mobile) ===== */}
        <section className='-mt-3 bg-white rounded-2xl shadow-sm ring-1 ring-gray-100 pt-10 px-4 pb-4 relative z-10'>
          <TimelineItem icon={<LinkIcon className='h-5 w-5' />} first>
            Everyday member must finish their daily workload, 2×20 purchase. After 20 purchase, membership may click on login to do daily sign in, everyday the reward goes higher.
          </TimelineItem>
          <TimelineItem icon={<CalendarIcon className='h-5 w-5' />}>
            If the registration date reaches 5 days, you will get the first day sign-in reward again. If you sign in for 5 days in a row, you will receive an additional sign-in bonus of 350 euros.
          </TimelineItem>
          <TimelineItem icon={<CardIcon className='h-5 w-5' />} last>
            If you sign in for 5 days in a row, you will receive an additional sign-in bonus of 350 euros.
          </TimelineItem>
        </section>

        {/* ===== Bottom bar ===== */}
        <div className='mt-5 bg-white rounded-2xl ring-1 ring-gray-100'>
          <div className='px-5 py-4 border-t border-gray-200 flex items-center justify-between'>
            <div className='text-[32px] font-extrabold text-gray-900'>0/5</div>
            <button className='px-6 py-3 rounded-xl bg-blue-600 text-white font-semibold'>Log in</button>
          </div>
        </div>
      </div>
    </div>
  );
}

function TimelineItem({ children, icon, first = false, last = false }) {
  // Make the vertical line run exactly under the icons (never through them)
  const top = first ? 20 + 20 : 0; // padding-top (20) + half icon (20)
  const bottom = last ? 20 + 20 : 0; // padding-bottom (20) + half icon (20)
  return (
    <div className='relative grid grid-cols-[40px_1fr] gap-4 py-5'>
      <span className='absolute left-[20px] w-[2px] bg-blue-200' style={{ top, bottom }} />
      <div className='relative z-[1] h-10 w-10 rounded-full bg-blue-600 text-white grid place-items-center shadow-md'>
        {icon}
      </div>
      <p className='text-gray-700 leading-relaxed'>{children}</p>
    </div>
  );
}

function GiftMini(props) {
  return (
    <svg viewBox='0 0 24 24' fill='none' stroke='currentColor' strokeWidth='1.8' strokeLinecap='round' strokeLinejoin='round' {...props}>
      <path d='M12 7c-2-3-5-2.5-4.8-.7.2 1.7 2.3 2.2 4.8.7m0 0c2-3 5-2.5 4.8-.7-.2 1.7-2.3 2.2-4.8.7' />
      <rect x='3' y='9.5' width='18' height='3' rx='.6' />
      <rect x='4' y='12.5' width='16' height='8.5' rx='1.2' />
      <path d='M12 9.5v11.5' />
    </svg>
  );
}

function GiftOutline(props) {
  return <GiftMini {...props} />;
}

function LinkIcon({ className }) {
  return (
    <svg viewBox='0 0 24 24' className={className} fill='none' stroke='currentColor' strokeWidth='1.8' strokeLinecap='round' strokeLinejoin='round'>
      <path d='M10.5 13.5l3-3' />
      <path d='M8 14a4 4 0 010-6l2-2a4.5 4.5 0 016.4 6.4L14.8 14' />
      <path d='M16 10a4 4 0 010 6l-2 2a4.5 4.5 0 01-6.4-6.4L9.2 10' />
    </svg>
  );
}

function CalendarIcon({ className }) {
  return (
    <svg viewBox='0 0 24 24' className={className} fill='none' stroke='currentColor' strokeWidth='1.8' strokeLinecap='round' strokeLinejoin='round'>
      <rect x='3' y='4.5' width='18' height='16' rx='2' />
      <path d='M8 2.5v4M16 2.5v4M3 9.5h18' />
      <rect x='7.5' y='12' width='3.5' height='3.5' rx='.6' />
    </svg>
  );
}

function CardIcon({ className }) {
  return (
    <svg viewBox='0 0 24 24' className={className} fill='none' stroke='currentColor' strokeWidth='1.8' strokeLinecap='round' strokeLinejoin='round'>
      <rect x='2.8' y='5.5' width='18.4' height='13' rx='2' />
      <path d='M3.5 9h17' />
      <rect x='6' y='12.5' width='5.5' height='2.8' rx='.6' />
    </svg>
  );
}

function Illustration({ className }) {
  // Decorative vector placeholder; replace with <img src=... /> if needed
  return (
    <svg viewBox='0 0 220 120' className={className} fill='none'>
      <defs>
        <linearGradient id='g' x1='0' y1='0' x2='1' y2='1'>
          <stop offset='0' stopColor='#FFE8A3' />
          <stop offset='1' stopColor='#FFD7A8' />
        </linearGradient>
      </defs>
      <rect x='0' y='0' width='220' height='120' rx='12' fill='url(#g)' />
      <g stroke='#F59E0B' strokeWidth='2' fill='#FDE68A'>
        <path d='M110 28c-6 0-10 5-10 11v18a16 16 0 0010 15 16 16 0 0010-15V39c0-6-4-11-10-11z' />
        <path d='M90 40c-10 2-18-2-22-12M130 40c10 2 18-2 22-12' />
        <rect x='98' y='72' width='24' height='10' rx='2' />
        <rect x='92' y='82' width='36' height='8' rx='2' />
      </g>
      <g fill='#60A5FA'>
        <circle cx='170' cy='18' r='3' />
        <circle cx='190' cy='34' r='3' />
        <circle cx='176' cy='56' r='3' />
      </g>
      <g fill='#34D399'>
        <circle cx='160' cy='48' r='3' />
        <circle cx='200' cy='66' r='3' />
      </g>
    </svg>
  );
}
